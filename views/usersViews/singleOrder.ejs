<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="description" content="" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <!-- The above 4 meta tags *must* come first in the head; any other head content must come *after* these tags -->

    <!-- Title  -->
    <title>Vertex</title>

    <!-- Favicon  -->
    <link rel="icon" href="/img/core-img/favicon.ico" />

    <!-- Core Style CSS -->
    <link rel="stylesheet" href="/css/core-style.css" />

    <style>
        .product-image img {
            width: 110px;
            /* height: 110px; */
            border-radius: 8px;
            object-fit: cover;
        }


        .profile-sidebar {
            text-align: center;
            padding: 10px;
            background-color: #f8f9fa;
            border-radius: 10px;
        }

        .profile-options {
            list-style: none;
            padding: 0;
            margin: 0;

        }

        .profile-options li {
            margin-bottom: 10px;
        }

        .profile-options a {
            text-decoration: none;
            display: block;
            padding: 10px 20px;
            border-radius: 20px;
            color: #495057;
            transition: background-color 0.3s;
        }

        .profile-options a:hover {
            background-color: #e9ecef;
        }

        .profile-options a.active {
            background-color: #000;
            color: #fff;
        }

        .user-details {
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 10px;
        }

        td a,
        td a:hover,
        td a.active,
        td a:focus {
            text-decoration: none;
            display: block;
            color: #000;
            font-weight: 400;
            font-family: "Poppins", sans-serif;
            font-size: 14px;
        }

        .user-details>.row {
            justify-content: space-between;
            margin: 0;
        }

        .product-row,
        .order-button {
            display: flex;
            flex-direction: column;
        }

        .product-row button,
        .order-button button {
            margin-bottom: 5px;
        }
    </style>

</head>

<body>
    <!-- ##### Header Area Start ##### -->
    <%- include("./partials/privateNavbar") %>

        <!-- ##### Header Area End ##### -->


        <!-- ##### Checkout Area Start ##### -->
        <div class="profile-page section-padding-80 pb-0">
            <div class="container">
                <div class="row">
                    <!-- Sidebar Section -->
                    <div class="col-12 col-md-5 col-lg-3">
                        <div class="profile-sidebar">
                            <ul class="list-unstyled profile-options">
                                <li><a href="/profile">Account</a></li>
                                <li><a href="/password">Change Password</a></li>
                                <li><a href="/orders" class="active">Order History</a></li>

                                <li><a href="/cart">Shopping Cart</a></li>
                                <li><a href="/wishlist">Wishlist</a></li>
                                <li><a href="/address">Address</a></li>
                                <li><a href="/add-address">Add Address</a></li>
                                <li><a href="/wallet">wallet</a></li>
                                <li><a href="/logout">Logout</a></li>
                            </ul>
                        </div>
                    </div>

                    <!-- User Details Section -->
                    <div class="col-12 col-md-7 col-lg-9">
                        <div class="user-details clearfix mb-2">
                            <div class="row">
                                <div class="order-details">
                                    <input type="hidden" name="" id="orderId" value="<%= order._id %>">
                                    <input type="hidden" name="" id="finalTotal" value="<%= order.finalTotal %>">
                                    <input type="hidden" name="" id="mobile"
                                        value="<%= order.shippingAddress.mobile %>">
                                    <h6>Order Number: <%= order.order_number %>
                                    </h6>
                                    <h6>Status: <%=order.orderStatus %>
                                    </h6>
                                    <h6>Payment Method: <%= order.paymentMethod %>
                                    </h6>
                                    <h6>Payment Status: <%= order.paymentStatus %>
                                    </h6>
                                    <h6>Ordered: <%= order.createdAt.toLocaleDateString() %>
                                    </h6>
                                    <h6>Total: <%= totalAmount %>
                                    </h6>
                                    <% if (order.coupon) { %>

                                        <% } %>

                                </div>



                                <div class="order-button">
                                    <% if (order.paymentStatus=="Failed" ) { %>
                                        <button type="button" class="btn btn-success" onclick="pay()">Pay</button>
                                        <% } %>

                                            <% if (order.orderStatus!=="Cancelled" && order.orderStatus!=="Returned" ) {
                                                %>
                                                <% if (order.orderStatus=="Delivered" ) { %>

                                                    <!-- <button type="button" class="btn btn-danger bg-danger"
                                            data-orderId="<%= order._id %>" id="actionBtn" data-action="return"
                                            onclick="returnOrder(this)">Return
                                            Order</button> -->
                                                    <button onclick="downloadInvoice()"
                                                        class="btn btn-primary">Invoice</button>

                                                    <% } else { %>
                                                        <!-- <button type="button" class=" btn  btn-danger bg-danger"
                                                data-orderId="<%= order._id %>" id="actionBtn" data-action="cancel"
                                                onclick="cancelOrder(this)">Cancel
                                                Order</button> -->

                                                        <% } %>

                                                            <% } %>

                                </div>
                            </div>

                            <hr>

                            <h6 class="card-title  mb-0">Delivery Address:</h6>
                            <p>
                                <%= order.shippingAddress.fullname %><br />
                                    <%= order.shippingAddress.mobile %><br />
                                        <%= order.shippingAddress.address %><br />
                                            <%= order.shippingAddress.pincode %><br />
                                                <%= order.shippingAddress.street %>, <%= order.shippingAddress.city %>,
                                                        <%= order.shippingAddress.state %>
                                                            <br />
                            </p>
                        </div>
                        <div class="table-responsive-sm mb-3">
                            <table id="myTable" class="table text-center table-hover my-0">
                                <thead>
                                    <tr>
                                        <th class=""></th>
                                        <th class="">Name</th>
                                        <th class="">Variant</th>
                                        <th class="">Price</th>
                                        <th class="">Quantity</th>
                                        <th class="">Total</th>
                                        <th class=""></th>

                                    </tr>
                                </thead>
                                <tbody>
                                    <% order.products.forEach(product=> { %>
                                        <tr>
                                            <td class="product-image">
                                                <img src="/img/products/<%=product.productId.images[0]  %>"
                                                    class="cart-thumb" alt="" />
                                            </td>
                                            <td>
                                                <%=product.productId.name %>
                                                    <br>
                                            </td>
                                            <td>
                                                <%= product.size %>,
                                                    <%= product.color %>
                                            </td>
                                            <td>
                                                ₹<%= product.price %>
                                            </td>
                                            <td>
                                                <%= product.quantity %>
                                            </td>
                                            <td class="product-total">
                                                ₹<%= product.price*product.quantity %>
                                            </td>
                                            <td>
                                                <div class="product-row">

                                                    <% if (order.orderStatus==="Cancelled" || product.cancel?.status) {
                                                        %>
                                                        Cancelled
                                                        <% } else if (order.orderStatus==="Returned" ||
                                                            product.return?.status) { %>
                                                            Returned
                                                            <% } else if (order.orderStatus==="Delivered" ) { %>
                                                                <button class="btn btn-danger return-product"
                                                                    data-itemid="<%= product._id %>"
                                                                    data-productid="<%= product.productId._id %>"
                                                                    onclick="returnProduct(this)">
                                                                    return product
                                                                </button>

                                                                <% } else { %>
                                                                    <button class="btn btn-danger cancel-product"
                                                                        data-itemid="<%= product._id %>"
                                                                        data-productid="<%= product.productId._id %>"
                                                                        onclick="cancelProduct(this)">
                                                                        Cancel product
                                                                    </button>

                                                                    <% } %>
                                                </div>



                                            </td>
                                        </tr>
                                        <% }) %>
                                            <% if (order.coupon.couponId) { %>
                                                <tr>
                                                    <td colspan="4"></td>
                                                    <td>Subtotal</td>
                                                    <td id="subtotal">
                                                        ₹<%= order.originalTotal %>
                                                    </td>
                                                    <td></td>
                                                </tr>
                                                <tr>
                                                    <td colspan="4"></td>
                                                    <td>Coupon</td>
                                                    <td id="coupon">
                                                        -₹<%= order.coupon.discountAmount %>
                                                    </td>
                                                    <td></td>
                                                </tr>
                                                <% } %>
                                                    <tr>
                                                        <td colspan="4"></td>
                                                        <td>Total</td>
                                                        <td>
                                                            ₹<%= totalAmount %>
                                                        </td>
                                                        <td></td>
                                                    </tr>
                                </tbody>
                            </table>
                        </div>



                    </div>
                </div>
            </div>

            <!-- ##### Checkout Area End ##### -->

            <!-- ##### Footer Area Start ##### -->
            <%- include("./partials/user-footer") %>
                <!-- ##### Footer Area End ##### -->

                <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
                <script>
                    async function downloadInvoice() {
                        try {
                            const orderId = document.querySelector("#orderId").value

                            const response = await fetch(`/invoice/${orderId}`);

                            // Check if the response is successful
                            if (response.ok) {
                                // Create a blob from the response data
                                const blob = await response.blob();

                                // Create a temporary URL for the blob
                                const url = window.URL.createObjectURL(blob);

                                // Create an anchor element to trigger the download
                                const a = document.createElement('a');
                                a.href = url;
                                a.download = 'invoice.pdf';
                                document.body.appendChild(a);
                                a.click();

                                // Clean up by revoking the URL object
                                window.URL.revokeObjectURL(url);
                            } else {
                                console.error('Failed to download invoice. Status:', response.status);
                            }
                        } catch (error) {
                            console.error('Error downloading invoice:', error);
                        }
                    }

                    async function cancelProduct(button) {
                        try {
                            const orderId = document.querySelector("#orderId").value
                            const { value: reason } = await Swal.fire({
                                input: "textarea",
                                inputLabel: "Are you sure you want to cancel this product?",
                                inputPlaceholder: "Type your reason here...",
                                inputAttributes: {
                                    "aria-label": "Type your message here"
                                },
                                showCancelButton: true,
                                inputValidator: (value) => {
                                    return new Promise((resolve) => {
                                        if (value) {
                                            resolve();
                                        } else {
                                            resolve("Please enter your reason for product cancel");
                                        }
                                    });
                                }
                            });
                            console.log(reason)

                            const productId = button.getAttribute("data-productid")
                            const itemId = button.getAttribute("data-itemid")

                            const response = await fetch("/cancel-products", {
                                method: "POST",
                                headers: {
                                    "content-Type": "application/json"
                                },
                                body: JSON.stringify({ orderId, productId, itemId, reason })
                            })
                            const jsonData = await response.json();
                            if (response.ok) {
                                await Swal.fire({
                                    icon: "success",
                                    title: "Product has been canceled",
                                    showConfirmButton: false,
                                    timer: 1500,
                                });
                                window.location.reload()
                            }

                        } catch (error) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: `Something went wrong!${error}`,
                            });
                        }
                    }

                    async function returnProduct(button) {
                        try {
                            const orderId = document.querySelector("#orderId").value
                            const { value: reason } = await Swal.fire({
                                input: "textarea",
                                inputLabel: "Are you sure you want to return this product?",
                                inputPlaceholder: "Type your reason here...",
                                inputAttributes: {
                                    "aria-label": "Type your message here"
                                },
                                showCancelButton: true,
                                inputValidator: (value) => {
                                    return new Promise((resolve) => {
                                        if (value) {
                                            resolve();
                                        } else {
                                            resolve("Please enter your reason for product return");
                                        }
                                    });
                                }
                            });
                            console.log(reason)

                            const productId = button.getAttribute("data-productid")
                            const itemId = button.getAttribute("data-itemid")

                            console.log(productId, itemId)

                            const response = await fetch("/return-products", {
                                method: "POST",
                                headers: {
                                    "content-Type": "application/json"
                                },
                                body: JSON.stringify({ orderId, productId, itemId, reason })
                            })
                            const jsonData = await response.json();
                            if (response.ok) {
                                await Swal.fire({
                                    icon: "success",
                                    title: "Product has been Returned",
                                    showConfirmButton: false,
                                    timer: 1500,
                                });
                                window.location.reload()
                            }

                        } catch (error) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: `Something went wrong!${error}`,
                            });
                        }
                    }


                    async function returnOrder(e) {
                        console.log("returnng")
                    }

                    async function cancelOrder(e) {
                        try {
                            console.log(e)
                            const button = event.target;
                            const orderId = button.dataset.orderid;

                            const { value: reason } = await Swal.fire({
                                input: "textarea",
                                inputLabel: "Are you sure you want to cancel this product?",
                                inputPlaceholder: "Type your reason here...",
                                inputAttributes: {
                                    "aria-label": "Type your message here"
                                },
                                showCancelButton: true,
                                inputValidator: (value) => {
                                    return new Promise((resolve) => {
                                        if (value) {
                                            resolve();
                                        } else {
                                            resolve("Please enter your reason for product cancel");
                                        }
                                    });
                                }
                            });


                            const response = await fetch('/cancelOrder', {
                                method: "PATCH",
                                headers: {
                                    "Content-Type": "application/json",
                                },
                                body: JSON.stringify({
                                    orderId
                                }),
                            });
                            const data = await response.json();
                            if (response.ok) {
                                await Swal.fire({
                                    icon: "success",
                                    title: "Order Canceled",
                                    text: data.message,
                                });
                                window.location.assign("/orders")
                            }
                        } catch (error) {
                            console.log(error)
                        }
                    }



                    const initialize = () => {
                        createOrder()

                        // const actionButton = document.querySelector("#actionBtn")
                        // const action = actionButton.getAttribute('data-action')
                        // console.log(action)
                        // if (action == "cancel") {
                        //     console.log("cancel Order")
                        //     actionButton.addEventListener("click", cancelOrder)
                        // } else {
                        //     console.log("return Order")
                        //     actionButton.addEventListener("click", returnOrder)
                        // }

                        // const cancelProductBtns = document.querySelectorAll(".cancel-product")
                        // cancelProductBtns.forEach((button) => {
                        //     button.addEventListener("click", () => (cancelProduct(button)))
                        // })
                    }

                    let orderId;

                    function pay() {
                        const amount = document.querySelector("#finalTotal").value
                        setupRazorpay(orderId, amount);
                    }


                    async function createOrder() {
                        try {
                            const amount = document.querySelector("#finalTotal").value
                            console.log(amount)
                            console.log(typeof amount)
                            const response = await fetch("/create/orderId", {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                },
                                body: JSON.stringify({ amount }),
                                redirect: "follow",
                            });
                            const result = await response.json();

                            orderId = result.orderId;
                        } catch (error) {
                            console.log(error);
                        }
                    }

                    function setupRazorpay(orderId, amount) {
                        console.log("setupRazorpay");

                        let phoneNumber = document.querySelector("#mobile").value;
                        var options = {
                            key: "rzp_test_XmE1i9cQzXOgPU",
                            amount: amount * 100,
                            currency: "INR",
                            name: "Acme Corp",
                            description: "Test Transaction",
                            image: "https://example.com/your_logo",
                            order_id: orderId,
                            handler: async function (response) {
                                let payment_id = response.razorpay_payment_id
                                const paymentData = {
                                    payment_id: response.razorpay_payment_id,
                                    order_id: response.razorpay_order_id,
                                    signature: response.razorpay_signature,
                                };
                                try {
                                    console.log("verifyPayment");
                                    const response = await fetch("/verify-payment", {
                                        method: "POST",
                                        headers: {
                                            "Content-Type": "application/json",
                                        },
                                        body: JSON.stringify(paymentData),
                                    });
                                    const data = await response.json;
                                    console.log(data)
                                    if (response.ok) {
                                        console.log("placerder for razor pay")
                                        successPayement(payment_id)
                                    }
                                } catch (error) {
                                    console.log(error);
                                }
                            },
                            "prefill": {
                                "contact": phoneNumber
                            },
                            theme: {
                                color: "#3399cc",
                            },
                        };
                        var rzp1 = new Razorpay(options);

                        rzp1.on("payment.failed", function (response) {
                            alert(response.error.description);
                        });
                        rzp1.open(); // Open the Razorpay Checkout form immediately after creating the instance
                    }

                    async function successPayement(paymentId) {
                        try {
                            let id = document.querySelector("#orderId").value
                            const response = await fetch("/pay", {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                },
                                body: JSON.stringify({
                                    id, paymentId
                                }),
                            });
                            const data = await response.json()
                            if (!response.ok) {
                                // Handle error response
                                console.error("Error placing order:", data);
                                // Optionally, display an error message to the user
                                await Swal.fire({
                                    icon: "error",
                                    title: "Error placing order",
                                    text: data.message || "An error occurred.",
                                    showConfirmButton: true,
                                });
                                return
                            }
                            await Swal.fire({
                                icon: "success",
                                title: "Payment successful",
                                showConfirmButton: false,
                                timer: 1500,
                            });
                            window.location.reload();
                        } catch (error) {
                            await Swal.fire({
                                icon: "error",
                                title: "Error placing order",
                                text: error.message || "An error occurred while placing your order.",
                                showConfirmButton: true,
                            });
                        }
                    }

                    document.addEventListener("DOMContentLoaded", () => initialize());
                </script>
                <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

                <!-- jQuery (Necessary for All JavaScript Plugins) -->
                <script src="/js/jquery/jquery-2.2.4.min.js"></script>
                <!-- Popper js -->
                <script src="/js/popper.min.js"></script>
                <!-- Bootstrap js -->
                <script src="/js/bootstrap.min.js"></script>
                <!-- Plugins js -->
                <script src="/js/plugins.js"></script>
                <!-- Classy Nav js -->
                <script src="/js/classy-nav.min.js"></script>
                <!-- Active js -->
                <script src="/js/active.js"></script>

                <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>

</html>