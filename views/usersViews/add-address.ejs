<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="description" content="" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
  <!-- The above 4 meta tags *must* come first in the head; any other head content must come *after* these tags -->

  <!-- Title  -->
  <title>Vertex</title>

  <!-- Favicon  -->
  <link rel="icon" href="img/core-img/favicon.ico" />

  <!-- Core Style CSS -->
  <link rel="stylesheet" href="css/core-style.css" />

  <style>
    .profile-sidebar {
      text-align: center;
      padding: 10px;
      background-color: #f8f9fa;
      border-radius: 10px;
    }

    .profile-options {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .profile-options li {
      margin-bottom: 10px;
    }

    .profile-options a {
      text-decoration: none;
      display: block;
      padding: 10px 20px;
      border-radius: 20px;
      color: #495057;
      transition: background-color 0.3s;
    }

    .profile-options a:hover {
      background-color: #e9ecef;
    }

    .profile-options a.active {
      background-color: #000;
      color: #fff;
    }

    .user-details {
      padding: 20px;
      background-color: #f8f9fa;
      border-radius: 10px;
    }
  </style>
</head>

<body>
  <!-- ##### Header Area Start ##### -->
  <%- include("./partials/privateNavbar") %>
    <!-- ##### Header Area End ##### -->

    <!-- ##### Checkout Area Start ##### -->
    <div class="profile-page section-padding-80">
      <div class="container">
        <div class="row">
          <!-- Sidebar Section -->
          <div class="col-12 col-md-5 col-lg-3">
            <div class="profile-sidebar">
              <ul class="list-unstyled profile-options">
                <li><a href="/profile">Account</a></li>
                <li><a href="#">Change Password</a></li>
                <li><a href="/orders">Order History</a></li>

                <li><a href="/cart">Shopping Cart</a></li>
                <li><a href="/wishlist">Wishlist</a></li>
                <li><a href="/address">Address</a></li>
                <li><a href="/add-address" class="active">Add Address</a></li>
                <li><a href="/wallet">wallet</a></li>
                <li><a href="/logout">Logout</a></li>
              </ul>
            </div>
          </div>

          <!-- User Details Section -->

          <div class="col-12 col-md-7 col-lg-9">
            <div class="user-details clearfix">
              <div class="profile-heading mt-15 mb-30">
                <h5>User Details</h5>
              </div>

              <form id="profileForm">
                <!-- Add user details fields here -->
                <div class="row">
                  <!-- Full Name -->
                  <div class="col-12 mb-3">
                    <label for="full_name">Full Name <span>*</span></label>
                    <input type="text" class="form-control" id="full_name" name="full_name" />
                    <div id="fullNameValidationMessage" class="text-danger mb-2"></div>
                  </div>

                  <!-- Mobile -->
                  <div class="col-12 mb-3">
                    <label for="mobile">Mobile <span>*</span></label>
                    <input type="text" class="form-control" id="mobile" name="mobile" />
                    <div id="mobileValidationMessage" class="text-danger mb-2"></div>
                  </div>

                  <!-- Street Address -->
                  <div class="col-12 mb-3">
                    <label for="address">Address <span>*</span></label>
                    <input type="text" class="form-control" id="address" name="address" />
                    <div id="streetAddressValidationMessage" class="text-danger mb-2"></div>
                  </div>

                  <!-- Pincode -->
                  <div class="col-12 mb-3">
                    <label for="pincode">Pincode <span>*</span></label>
                    <input type="text" class="form-control" id="pincode" name="pincode" />
                    <div id="pincodeValidationMessage" class="text-danger mb-2"></div>
                  </div>

                  <!-- State -->
                  <div class="col-12 mb-3">
                    <label for="state">State <span>*</span></label>
                    <input type="text" class="form-control" id="state" name="state" />
                    <div id="stateValidationMessage" class="text-danger mb-2"></div>
                  </div>

                  <!-- Town/City -->
                  <div class="col-12 mb-3">
                    <label for="town_city">Town/City <span>*</span></label>
                    <input type="text" class="form-control" id="town_city" name="town_city" />
                    <div id="townCityValidationMessage" class="text-danger mb-2"></div>
                  </div>

                  <!-- Province -->
                  <div class="col-12 mb-3">
                    <label for="street">Street <span>*</span></label>
                    <input type="text" class="form-control" id="street" name="street" />
                    <div id="streetValidationMessage" class="text-danger mb-2"></div>
                  </div>

                  <!-- Update button -->
                  <div class="col-12">
                    <button type="button" class="btn essence-btn" id="saveBtn">
                      Add
                    </button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- ##### Checkout Area End ##### -->

    <!-- ##### Footer Area Start ##### -->
    <%- include("./partials/user-footer") %>
      <!-- ##### Footer Area End ##### -->

      <script>
        const initialize = () => {
          const btn = document.getElementById("saveBtn");
          btn.addEventListener("click", addAddress);
        };

        const fullNameValidationMessage = document.getElementById(
          "fullNameValidationMessage"
        );
        const mobileValidationMessage = document.getElementById(
          "mobileValidationMessage"
        );
        const streetAddressValidationMessage = document.getElementById(
          "streetAddressValidationMessage"
        );
        const pincodeValidationMessage = document.getElementById(
          "pincodeValidationMessage"
        );
        const stateValidationMessage = document.getElementById(
          "stateValidationMessage"
        );
        const townCityValidationMessage = document.getElementById(
          "townCityValidationMessage"
        );
        const streetValidationMessage = document.getElementById(
          "streetValidationMessage"
        );

        async function addAddress() {
          try {
            let isValidated = true;
            fullNameValidationMessage.textContent = "";
            mobileValidationMessage.textContent = "";
            streetAddressValidationMessage.textContent = "";
            pincodeValidationMessage.textContent = "";
            stateValidationMessage.textContent = "";
            townCityValidationMessage.textContent = "";
            streetValidationMessage.textContent = "";

            const full_name = document.getElementById("full_name").value;
            const mobile = document.getElementById("mobile").value;
            const address = document.getElementById("address").value;
            const pincode = document.getElementById("pincode").value;
            const state = document.getElementById("state").value;
            const town_city = document.getElementById("town_city").value;
            const street = document.getElementById("street").value;

            if (full_name.trim() == "") {
              fullNameValidationMessage.textContent = "full name is required";
              isValidated = false;
            }
            if (mobile.trim() == "") {
              mobileValidationMessage.textContent = "mobile number is required";
              isValidated = false;
            }
            if (address.trim() == "") {
              streetAddressValidationMessage.textContent = "address is required";
              isValidated = false;
            }
            if (pincode.trim() == "") {
              pincodeValidationMessage.textContent = "pincode is required";
              isValidated = false;
            }
            if (state.trim() == "") {
              stateValidationMessage.textContent = "state name is required";
              isValidated = false;
            }
            if (town_city.trim() == "") {
              townCityValidationMessage.textContent = "town/city is required";
              isValidated = false;
            }
            if (street.trim() == "") {
              streetValidationMessage.textContent = "street is required";
              isValidated = false;
            }

            if (!isValidated) {
              return;
            }

            console.log(
              full_name,
              mobile,
              address,
              pincode,
              state,
              town_city,
              street
            );

            const response = await fetch("/add-address", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                full_name,
                mobile,
                address,
                pincode,
                state,
                town_city,
                street,
              }),
            });
            if (response.status === 401) {
              // Handle case where user is not logged in
              Swal.fire({
                title: "<strong>You haven't logged</strong>",
                icon: "warning",
                html: `You have to login before trying to adding Address.`,
                showCloseButton: true,
                focusConfirm: false,
                confirmButtonText: `<a href="/login">Login</a>`,
              });
            } else if (response.status === 409) {
              // Handle case where the product is already in the cart
              const data = await response.json();
              Swal.fire(data.message);
            } else if (response.ok) {
              await Swal.fire("Address added successfully!");
              window.location.href = "/address";
            }
          } catch (error) {
            console.log(error);
          }
        }

        document.addEventListener("DOMContentLoaded", () => initialize());
      </script>

      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

      <!-- jQuery (Necessary for All JavaScript Plugins) -->
      <script src="/js/jquery/jquery-2.2.4.min.js"></script>
      <!-- Popper js -->
      <script src="/js/popper.min.js"></script>
      <!-- Bootstrap js -->
      <script src="/js/bootstrap.min.js"></script>
      <!-- Plugins js -->
      <script src="/js/plugins.js"></script>
      <!-- Classy Nav js -->
      <script src="/js/classy-nav.min.js"></script>
      <!-- Active js -->
      <script src="/js/active.js"></script>

      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>

</html>