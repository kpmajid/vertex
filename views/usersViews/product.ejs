<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="description" content="" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <!-- The above 4 meta tags *must* come first in the head; any other head content must come *after* these tags -->

    <!-- Title  -->
    <title>Vertex</title>

    <!-- Favicon  -->
    <link rel="icon" href="/img/core-img/favicon.ico" />


    <!-- Core Style CSS -->
    <link rel="stylesheet" href="/css/core-style.css" />
    <!-- <link rel="stylesheet" href="style.css"> -->

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- <script src="https://unpkg.com/xzoom/dist/xzoom.min.js"></script> -->
    <script src="/javascripts/xzoom.js"></script>
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/xzoom/dist/xzoom.css">


    <style>
        .radio-box {
            display: flex;
            margin-bottom: 10px;
        }

        .radio-label {
            padding: 10px 15px;
            margin: 2px;
            border-radius: 25px;
            /* Adjust the border-radius for the capsule shape */
            cursor: pointer;
            transition: background-color 0.3s ease;
            background-color: #fff;
            /* Blue for unselected state */
            color: #000;
            border: 1px solid #000;
        }

        .radio-box .disabled {
            border: 0px;
            background-color: #ccc;
            /* Change the background color for disabled state */
            cursor: not-allowed;
        }

        /* Hide the actual radio buttons */
        input[type="radio"] {
            display: none;
        }

        .radio-box input[type="radio"]:checked+label {
            /* Styles for the checked radio button */
            background-color: #000;
            /* Black for selected state */
            color: #fff;
        }

        .xzoom-column {
            justify-content: center;
            margin: 10px 0;
        }

        .xzoom-container {
            width: 550px;
            height: 550px;
            align-items: center;
            justify-content: center;
        }

        .xzoom-thumbs {
            flex-direction: column;
        }

        .xzoom-preview {

            z-index: 1;
        }

        .xzoom-source img,
        .xzoom-preview img,
        .xzoom-lens img {
            display: block;
            max-width: none;
            max-height: none;
            -webkit-transition: none;
            -moz-transition: none;
            -o-transition: none;
            transition: none;
            z-index: 99;
        }

        #xzoom-default {
            width: 80%;
        }

        .xzoom {
            display: contents;
        }

        .single_product_desc {
            display: flex;
            flex-direction: column;
        }

        #addtowishlist {
            margin-left: 10px;
        }
    </style>
</head>

<body>
    <!-- ##### Header Area Start ##### -->
    <%- include("./partials/publicNavbar") %> 
    <!-- ##### Header Area End ##### -->

    <!-- ##### Single Product Details Area Start ##### -->

    <div class="row">
        <!-- Single Product Thumb -->
        <div class="xzoom-column large-5 d-flex column col-12 col-lg-6">
            <div class="xzoom-container d-flex" id="xzoom-container">
                <div class="xzoom" id="xzoom" style="z-index: -1;">
                    <img class="xzoom-image" id="xzoom-default" src="/img/products/<%= product.images[0] %>"
                        xoriginal="/img/products/<%= product.images[0] %>" style="width: 80%;" />
                </div>
                <div class="xzoom-thumbs d-flex">
                    <% product.images.forEach(image=> { %>
                        <a href="/img/products/<%= image %>"><img class="xzoom-gallery" width="80"
                                src="/img/products/<%= image %>" title="<%= product.name %>"></a>
                        <% }) %>
                </div>
            </div>
        </div>
        <section class="single_product_details_area col-12 col-lg-6 d-flex align-items-center">
            <!-- Single Product Description -->
            <div class="single_product_desc clearfix">
                <!-- <span>mango</span> -->
                <h2 id="productName">
                    <%= product.name %>
                </h2>

                <p class="product-price">
                    <% if (product.discount) { %>
                        <span class="old-price">
                            ₹ <%= product.originalPrice %>
                        </span>
                        ₹ <%= product.discountedPrice %>
                            <% } else { %> ₹ <%= product.originalPrice %>
                                    <% } %>
                </p>
                <p class="product-desc">
                    <%= product.description %>.
                </p>

                <!-- Form -->
                <input type="hidden" name="productId" id="productId" value="<%= product._id %>" />
                <form id="myForm" class="cart-form clearfix">
                    <!-- Color Radio Buttons -->
                    <span class="">select color</span>
                    <div class="radio-box" id="colorOptions">
                        <% uniqueColors.forEach((color,index)=> { %> <input type="radio" name="color"
                                id="color<%= color %>" value="<%= color %>" <% if (index==0) { %> checked <% } %>>
                                <label for="color<%= color %>" class="radio-label">
                                    <%= color %>
                                </label>

                                <% }) %>
                    </div>

                    <span class="">choose size</span>
                    <div class="radio-box" id="sizeOptions"></div>

                    <!-- Cart & Favourite Box -->
                    <div class="cart-fav-box d-flex align-items-center">
                        <!-- Cart -->
                        <button type="button" name="addtocart" id="addtocart" class="btn essence-btn">
                            Add to cart
                        </button>
                        <!-- WishList -->
                        <button type="button" name="addtowishlist" id="addtowishlist" class="btn essence-btn">
                            Add to WishList
                        </button>
                    </div>
                </form>
            </div>
        </section>

    </div>
    <!-- ##### Single Product Details Area End ##### -->

    <!-- ##### Footer Area Start ##### -->
    <%- include("./partials/user-footer") %>
    <!-- ##### Footer Area End ##### -->

    <script>
        (function ($) {
            $(document).ready(function () {
                $('.xzoom-image, .xzoom-gallery').xzoom({
                    zoomWidth: 350,
                    zoomHeight: 350,
                    title: true,
                    tint: '#333',
                    Xoffset: 15,
                    lensSize: 200
                });

                //Integration with hammer.js
                var isTouchSupported = 'ontouchstart' in window;

                if (isTouchSupported) {
                    //If touch device
                    $('.xzoom-image').each(function () {
                        var xzoom = $(this).data('xzoom');
                        xzoom.eventunbind();
                    });

                    $('.xzoom-image').each(function () {
                        var xzoom = $(this).data('xzoom');
                        $(this).hammer().on("tap", function (event) {
                            event.pageX = event.gesture.center.pageX;
                            event.pageY = event.gesture.center.pageY;
                            var s = 1, ls;

                            xzoom.eventmove = function (element) {
                                element.hammer().on('drag', function (event) {
                                    event.pageX = event.gesture.center.pageX;
                                    event.pageY = event.gesture.center.pageY;
                                    xzoom.movezoom(event);
                                    event.gesture.preventDefault();
                                });
                            };

                            xzoom.eventleave = function (element) {
                                element.hammer().on('tap', function (event) {
                                    xzoom.closezoom();
                                });
                            };

                            xzoom.openzoom(event);
                        });
                    });

                } else {
                    //If not touch device

                    //Integration with fancybox plugin
                    $('#xzoom-fancy').bind('click', function (event) {
                        var xzoom = $(this).data('xzoom');
                        xzoom.closezoom();
                        $.fancybox.open(xzoom.gallery().cgallery, { padding: 0, helpers: { overlay: { locked: false } } });
                        event.preventDefault();
                    });

                    //Integration with magnific popup plugin
                    $('#xzoom-magnific').bind('click', function (event) {
                        var xzoom = $(this).data('xzoom');
                        xzoom.closezoom();
                        var gallery = xzoom.gallery().cgallery;
                        var i, images = new Array();
                        for (i in gallery) {
                            images[i] = { src: gallery[i] };
                        }
                        $.magnificPopup.open({ items: images, type: 'image', gallery: { enabled: true } });
                        event.preventDefault();
                    });
                }
            });
        })(jQuery);
    </script>

    <script>
        const initialize = () => {
            const colorRadioButtons = document.querySelectorAll(
                'input[name="color"]'
            );
            colorRadioButtons.forEach((radioButton) => {
                radioButton.addEventListener("change", updateOptions);
            });

            updateOptions();

            const btn = document.getElementById("addtocart");
            btn.addEventListener("click", addToCart);

            const wishlistbtn = document.getElementById("addtowishlist")
            wishlistbtn.addEventListener("click", addToWishlist)
        };


        //fetch size
        async function addToWishlist() {
            const id = document.getElementById("productId").value;
            try {
                console.log("await")
                const response = await fetch(`/addToWishlist/${id}`)
                if (response.status === 401) {
                    // Handle case where user is not logged in
                    Swal.fire({
                        title: "<strong>You haven't logged</strong>",
                        icon: "warning",
                        html: `You have to login before trying to adding product to wishlist.`,
                        showCloseButton: true,
                        focusConfirm: false,
                        confirmButtonText: `<a href="/login">Login</a>`,
                    });
                } else if (response.status === 409) {
                    const data = await response.json();
                    Swal.fire(data.message);
                } else if (response.ok) {
                    console.log(response)
                    Swal.fire("Product added to the wishlist!");
                }
            } catch (error) {
                console.log(error)
            }
        }

        async function updateOptions() {
            const sizeOptionsDiv = document.getElementById("sizeOptions");
            const colorOptionsDiv = document.getElementById("colorOptions");

            let selectedColor = document.querySelector(
                'input[name="color"]:checked'
            ).value;
            let productId = document.getElementById("productId").value;

            try {
                const response = await fetch(
                    `/variants/${productId}/${selectedColor}`
                );
                const data = await response.json();
                const variants = data.variants;
                sizeOptionsDiv.innerHTML = "";
                sizeOptionsDiv.innerHTML = variants
                    .map(function (variant, index) {
                        const { size, _id, quantity } = variant;
                        const isChecked = quantity > 0 && index == 0 ? "checked" : ""; // Check only if quantity is greater than 0
                        const isDisabled = quantity <= 0 ? "disabled" : ""; // Disable if quantity is 0

                        return `
                <input type="radio" name="size" id="size${_id}" value="${size}" ${isChecked} ${isDisabled}>
                <label for="size${_id}" class="radio-label ${isDisabled ? "disabled" : ""}">${size} </label>
                `;
                    })
                    .join("");
            } catch (error) {
                console.log(error);
            }
        }

        // add to cart
        async function addToCart() {
            const productId = document.getElementById("productId")?.value || null;
            const color = document.querySelector(
                'input[name="color"]:checked'
            )?.value || null;
            const size = document.querySelector('input[name="size"]:checked')?.value || null;



            try {
                if (!color || !size) {

                    Swal.fire({
                        title: "<strong>Please Select Color and Size</strong>",
                        icon: "warning",
                        html: `You have to Select Color and Size.`,
                        showCloseButton: true,
                        focusConfirm: false,
                    });
                    return
                }
                const response = await fetch("/addToCart", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        productId,
                        color,
                        size,
                    }),
                });
                if (response.status === 401) {
                    // Handle case where user is not logged in
                    Swal.fire({
                        title: "<strong>You haven't logged</strong>",
                        icon: "warning",
                        html: `You have to login before trying to adding product to cart.`,
                        showCloseButton: true,
                        focusConfirm: false,
                        confirmButtonText: `<a href="/login">Login</a>`,
                    });
                } else if (response.status === 409) {
                    // Handle case where the product is already in the cart
                    const data = await response.json();
                    Swal.fire(data.message);
                } else if (response.ok) {
                    // Handle case where the product was successfully added
                    Swal.fire("Product added to the cart successfully!");
                }
            } catch (error) {
                console.log(error);
            }
        }

        document.addEventListener("DOMContentLoaded", () => initialize());
    </script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- jQuery (Necessary for All JavaScript Plugins) -->
    <script src="/js/jquery/jquery-2.2.4.min.js"></script>
    <!-- Popper js -->
    <script src="/js/popper.min.js"></script>
    <!-- Bootstrap js -->
    <script src="/js/bootstrap.min.js"></script>
    <!-- Plugins js -->
    <script src="/js/plugins.js"></script>
    <!-- Classy Nav js -->
    <script src="/js/classy-nav.min.js"></script>
    <!-- Active js -->
    <script src="/js/active.js"></script>
</body>

</html>